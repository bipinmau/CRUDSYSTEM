@page
@model DRDOAssignment.Pages.States.IndexModel
@{
    ViewData["Title"] = "States";
}

<h1>States</h1>
<p>
    <button type="button" class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createModal">
        Add State
    </button>
</p>

<table class="table table-bordered" id="stateTable">
    <thead>
        <tr>
            <th>Name</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>

<!-- Create Modal -->
<div class="modal fade" id="createModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add State</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="createForm">
                    <div class="form-group">
                        <label for="Name">Name</label>
                        <input type="text" class="form-control" id="Name" name="Name" required>
                        <span class="text-danger" id="nameError"></span>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveButton">Save</button>
            </div>
        </div>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Edit State</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="editForm">
                    <input type="hidden" id="editId" name="Id">
                    <div class="form-group">
                        <label for="editName">Name</label>
                        <input type="text" class="form-control" id="editName" name="Name" required>
                        <span class="text-danger" id="editNameError"></span>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="updateButton">Update</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            loadStates();

            function loadStates() {
                $.ajax({
                    url: '/api/State',
                    type: 'GET',
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (data) {
                        var tbody = $('#stateTable tbody');
                        tbody.empty();
                        $.each(data, function (index, item) {
                            var row = $('<tr>');
                            row.append($('<td>').text(item.name));
                            
                            var actions = $('<td>');
                            actions.append($('<button>')
                                .addClass('btn btn-sm btn-warning me-2')
                                .text('Edit')
                                .click(function () {
                                    showEditModal(item);
                                }));
                            actions.append($('<button>')
                                .addClass('btn btn-sm btn-danger')
                                .text('Delete')
                                .click(function () {
                                    if (confirm('Are you sure you want to delete this state?')) {
                                        deleteState(item.id);
                                    }
                                }));
                            row.append(actions);
                            
                            tbody.append(row);
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error('Error loading states:', error);
                        alert('Error loading states. Please try again.');
                    }
                });
            }

            function showEditModal(state) {
                $('#editId').val(state.id);
                $('#editName').val(state.name);
                $('#editModal').modal('show');
            }

            $('#saveButton').click(function () {
                var formData = {
                    name: $('#Name').val()
                };

                $.ajax({
                    url: '/api/State',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(formData),
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function () {
                        $('#createModal').modal('hide');
                        $('#createForm')[0].reset();
                        loadStates();
                    },
                    error: function (xhr) {
                        if (xhr.responseJSON && xhr.responseJSON.errors) {
                            var errors = xhr.responseJSON.errors;
                            if (errors.Name) {
                                $('#nameError').text(errors.Name.join(', '));
                            }
                        } else {
                            alert('Error creating state. Please try again.');
                        }
                    }
                });
            });

            $('#updateButton').click(function () {
                var formData = {
                    id: $('#editId').val(),
                    name: $('#editName').val()
                };

                $.ajax({
                    url: '/api/State/' + formData.id,
                    type: 'PUT',
                    contentType: 'application/json',
                    data: JSON.stringify(formData),
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function () {
                        $('#editModal').modal('hide');
                        loadStates();
                    },
                    error: function (xhr) {
                        if (xhr.responseJSON && xhr.responseJSON.errors) {
                            var errors = xhr.responseJSON.errors;
                            if (errors.Name) {
                                $('#editNameError').text(errors.Name.join(', '));
                            }
                        } else {
                            alert('Error updating state. Please try again.');
                        }
                    }
                });
            });

            function deleteState(id) {
                $.ajax({
                    url: '/api/State/' + id,
                    type: 'DELETE',
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function () {
                        loadStates();
                    },
                    error: function (xhr, status, error) {
                        console.error('Error deleting state:', error);
                        alert('Error deleting state. Please try again.');
                    }
                });
            }

            // Clear error messages when modals are closed
            $('.modal').on('hidden.bs.modal', function () {
                $('.text-danger').text('');
                $(this).find('form')[0].reset();
            });
        });
    </script>
} 